{"version":3,"sources":["Components/launchPrograms/filter.js","Components/launchPrograms/launchPrograms.js","App.js","serviceWorker.js","index.js"],"names":["Filter","year","changeYear","launchStatus","landStatus","changeLaunchStatus","changeLandStatus","useState","inputYear","setInputYear","invalid","setInvalid","className","Card","CardBody","CardTitle","Form","onSubmit","e","preventDefault","submitYear","Input","type","placeholder","style","borderWidth","borderColor","boxShadow","onChange","target","value","FormFeedback","Row","Col","xs","Button","color","onClick","CardSubtitle","borderBottom","LaunchPrograms","spacexData","setSpacexData","setYear","setLaunchStatus","setLandStatus","useEffect","axios","then","res","console","log","data","maxWidth","margin","float","width","lg","length","map","i","md","key","CardImg","top","backgroundColor","src","links","mission_patch_small","alt","rocket","rocket_name","mission_name","flight_number","mission_id","item","launch_year","launch_success","toString","first_stage","cores","land_success","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c7bb32ab.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Card, CardBody, CardTitle, CardSubtitle, Button, Row, Col, Input, Form, FormFeedback } from 'reactstrap'\n\nfunction Filter({\n    year,\n    changeYear,\n    launchStatus,\n    landStatus,\n    changeLaunchStatus,\n    changeLandStatus,\n    ...props\n}) {\n    const [inputYear, setInputYear] = useState('')\n    const [invalid, setInvalid] = useState(false)\n    const submitYear = (e) => {\n        e.preventDefault()\n        if((inputYear>2005 && inputYear<2021) || inputYear === '' ){\n            setInvalid(false)\n            changeYear(inputYear)\n        }\n        else{\n            setInvalid(true)\n        }\n    }\n    return (\n        <div className=\"p-2\">\n            <Card>\n                <CardBody>\n                    <CardTitle className=\"d-flex justify-content-start\">\n                        FilteFs\n                    </CardTitle>\n                    <Form className=\"pb-2\" onSubmit={(e)=>submitYear(e)}>\n                        <Input type=\"text\" placeholder=\"Launch Year\" style={{borderWidth: \"0 0 2px\", borderColor: \"#f4f4f4\", boxShadow: \"none\" }} onChange={(e)=> setInputYear(e.target.value)} invalid={invalid}  />\n                        <FormFeedback>Please Enter a valid year</FormFeedback>\n                    </Form>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2006?'opacity-4':''}`} onClick={()=> year !== 2006?changeYear(2006):changeYear('')}>2006</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2007?'opacity-4':''}`} onClick={()=> year !== 2007?changeYear(2007):changeYear('')}>2007</Button></Col>\n                    </Row>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2008?'opacity-4':''}`} onClick={()=> year !== 2008?changeYear(2008):changeYear('')}>2008</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2009?'opacity-4':''}`} onClick={()=> year !== 2009?changeYear(2009):changeYear('')}>2009</Button></Col>\n                    </Row>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2010?'opacity-4':''}`} onClick={()=> year !== 2010?changeYear(2010):changeYear('')}>2010</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2011?'opacity-4':''}`} onClick={()=> year !== 2011?changeYear(2011):changeYear('')}>2011</Button></Col>\n                    </Row>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2012?'opacity-4':''}`} onClick={()=> year !== 2012?changeYear(2012):changeYear('')}>2012</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2013?'opacity-4':''}`} onClick={()=> year !== 2013?changeYear(2013):changeYear('')}>2013</Button></Col>\n                    </Row>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2014?'opacity-4':''}`} onClick={()=> year !== 2014?changeYear(2014):changeYear('')}>2014</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2015?'opacity-4':''}`} onClick={()=> year !== 2015?changeYear(2015):changeYear('')}>2015</Button></Col>\n                    </Row>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2016?'opacity-4':''}`} onClick={()=> year !== 2016?changeYear(2016):changeYear('')}>2016</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2017?'opacity-4':''}`} onClick={()=> year !== 2017?changeYear(2017):changeYear('')}>2017</Button></Col>\n                    </Row>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2018?'opacity-4':''}`} onClick={()=> year !== 2018?changeYear(2018):changeYear('')}>2018</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2019?'opacity-4':''}`} onClick={()=> year !== 2019?changeYear(2019):changeYear('')}>2019</Button></Col>\n                    </Row>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${year !== 2020?'opacity-4':''}`} onClick={()=> year !== 2020?changeYear(2020):changeYear('')}>2020</Button></Col>\n                    </Row>\n                    <CardSubtitle className=\"pt-3 mb-2\" style={{borderBottom: \"2px solid #f4f4f4\"}} >\n                        Successful Launch\n                    </CardSubtitle>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${launchStatus !== \"true\"?'opacity-4':''}`} onClick={()=>launchStatus !== 'true'?changeLaunchStatus('true'):changeLaunchStatus('')}>True</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${launchStatus !== \"false\"?'opacity-4':''}`} onClick={()=>launchStatus !== 'false'?changeLaunchStatus('false'):changeLaunchStatus('')}>False</Button></Col>\n                    </Row>\n                    <CardSubtitle className=\"pt-3 mb-2\" style={{borderBottom: \"2px solid #f4f4f4\"}}>\n                        Successful Landing\n                    </CardSubtitle>\n                    <Row className=\"pb-1\">\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${landStatus !== \"true\"?'opacity-4':''}`} onClick={()=>landStatus !== 'true' ? changeLandStatus('true'):changeLandStatus('')}>True</Button></Col>\n                        <Col xs={6}><Button color=\"success\" className={`shadow-none ${landStatus !== \"false\"?'opacity-4':''}`} onClick={()=>landStatus !== \"false\"?changeLandStatus('false'):changeLandStatus('')}>False</Button></Col>\n                    </Row>\n                </CardBody>\n            </Card>\n        </div>\n    )\n}\n\nexport default Filter\n","import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Card, CardImg, CardTitle,  } from \"reactstrap\";\nimport Filter from './filter'\nimport axios from 'axios'\n\nfunction LaunchPrograms() {\n  const [spacexData, setSpacexData] = useState([])\n  const [year, setYear] = useState('')\n  const [launchStatus, setLaunchStatus] = useState('')\n  const [landStatus, setLandStatus] = useState('')\n  useEffect(()=>{\n    axios(`https://api.spacexdata.com/v3/launches?limit=100&launch_success=${launchStatus}&land_success=${landStatus}&launch_year=${year}`).then(res => {\n        console.log(res.data)\n        setSpacexData(res.data)\n    })\n  },[year, launchStatus, landStatus])\n\n  return (\n    <div style={{maxWidth: \"1440px\", margin: \"0 auto\"}}>\n        <h3 className=\"p-2\" style={{float: \"left\"}}>SpacEx Launch Programs</h3>\n        <Row style={{width: \"100%\"}}>\n            <Col lg={3}>\n                <Filter year={year} changeYear={setYear} launchStatus={launchStatus} landStatus={landStatus} changeLaunchStatus={setLaunchStatus} changeLandStatus={setLandStatus} />\n            </Col>\n            <Col lg={9}>\n                <Row className=\"p-2\">\n                    {spacexData.length>0 && spacexData.map((data, i) => (\n                        <Col lg={3} md={6} className=\"mb-2 pb-2\" key={i}>\n                            <Card>\n                                <div className=\"m-2\">\n                                <CardImg top width=\"100%\" style={{backgroundColor: \"#f4f4f4\"}} src={data.links.mission_patch_small} alt={`${data.rocket.rocket_name} img`} />\n                                </div>\n                                <CardTitle style={{color: \"rgb(65, 83, 146)\"}} className=\"px-2\">\n                                    {`${data.mission_name} #${data.flight_number}`}\n                                </CardTitle>\n                                <div className={`mx-2 d-flex justify-content-start ${data.mission_id.length>0?null:'pb-3'}`}><b>Mission Ids:</b></div>\n                                <li className=\"mx-2 d-flex justify-content-start\">\n                                    {data.mission_id.map((item, i) => (\n                                        <ul key={i}>{item}</ul>    \n                                    ))}\n                                </li>\n                                <p className=\"mx-2 d-flex\"><b>Launch Year: {data.launch_year}</b></p>\n                                <p className=\"mx-2 d-flex\"><b>Successful Launch: {data.launch_success === null?'':data.launch_success.toString()}</b></p>\n                                <p className=\"mx-2 d-flex\"><b>Successful Landing: {data.rocket.first_stage.cores[0].land_success === null? '': data.rocket.first_stage.cores[0].land_success.toString()}</b></p>\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n            </Col>\n        </Row>\n    </div>\n  );\n}\n\nexport default LaunchPrograms;\n","import React from 'react';\nimport './App.css';\nimport LaunchPrograms from './Components/launchPrograms/launchPrograms'\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{backgroundColor: \"#f4f4f4\"}}>\n      <LaunchPrograms />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}